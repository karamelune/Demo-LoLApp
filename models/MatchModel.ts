import { Schema, model, models } from 'mongoose';
import {
    Challenges,
    Match,
    Missions,
    Participant,
    Perks,
    Team,
} from '@/types/match';

const ChallengesSchema = new Schema<Challenges>({
    '12AssistStreakCount': { type: Number },
    HealFromMapSources: { type: Number },
    InfernalScalePickup: { type: Number },
    SWARM_DefeatAatrox: { type: Number },
    SWARM_DefeatBriar: { type: Number },
    SWARM_DefeatMiniBosses: { type: Number },
    SWARM_EvolveWeapon: { type: Number },
    SWARM_Have3Passives: { type: Number },
    SWARM_KillEnemy: { type: Number },
    SWARM_PickupGold: { type: Number },
    SWARM_ReachLevel50: { type: Number },
    SWARM_Survive15Min: { type: Number },
    SWARM_WinWith5EvolvedWeapons: { type: Number },
    abilityUses: { type: Number },
    acesBefore15Minutes: { type: Number },
    alliedJungleMonsterKills: { type: Number },
    baronBuffGoldAdvantageOverThreshold: { type: Number },
    baronTakedowns: { type: Number },
    blastConeOppositeOpponentCount: { type: Number },
    bountyGold: { type: Number },
    buffsStolen: { type: Number },
    completeSupportQuestInTime: { type: Number },
    controlWardTimeCoverageInRiverOrEnemyHalf: { type: Number },
    controlWardsPlaced: { type: Number },
    damagePerMinute: { type: Number },
    damageTakenOnTeamPercentage: { type: Number },
    dancedWithRiftHerald: { type: Number },
    deathsByEnemyChamps: { type: Number },
    dodgeSkillShotsSmallWindow: { type: Number },
    doubleAces: { type: Number },
    dragonTakedowns: { type: Number },
    earliestBaron: { type: Number },
    earliestDragonTakedown: { type: Number },
    earlyLaningPhaseGoldExpAdvantage: { type: Number },
    effectiveHealAndShielding: { type: Number },
    elderDragonKillsWithOpposingSoul: { type: Number },
    elderDragonMultikills: { type: Number },
    enemyChampionImmobilizations: { type: Number },
    enemyJungleMonsterKills: { type: Number },
    epicMonsterKillsNearEnemyJungler: { type: Number },
    epicMonsterKillsWithin30SecondsOfSpawn: { type: Number },
    epicMonsterSteals: { type: Number },
    epicMonsterStolenWithoutSmite: { type: Number },
    firstTurretKilled: { type: Number },
    firstTurretKilledTime: { type: Number },
    fistBumpParticipation: { type: Number },
    flawlessAces: { type: Number },
    fullTeamTakedown: { type: Number },
    gameLength: { type: Number },
    getTakedownsInAllLanesEarlyJungleAsLaner: { type: Number },
    goldPerMinute: { type: Number },
    hadOpenNexus: { type: Number },
    immobilizeAndKillWithAlly: { type: Number },
    initialBuffCount: { type: Number },
    initialCrabCount: { type: Number },
    jungleCsBefore10Minutes: { type: Number },
    junglerTakedownsNearDamagedEpicMonster: { type: Number },
    kTurretsDestroyedBeforePlatesFall: { type: Number },
    kda: { type: Number },
    killAfterHiddenWithAlly: { type: Number },
    killParticipation: { type: Number },
    killedChampTookFullTeamDamageSurvived: { type: Number },
    killingSprees: { type: Number },
    killsNearEnemyTurret: { type: Number },
    killsOnOtherLanesEarlyJungleAsLaner: { type: Number },
    killsOnRecentlyHealedByAramPack: { type: Number },
    killsUnderOwnTurret: { type: Number },
    killsWithHelpFromEpicMonster: { type: Number },
    knockEnemyIntoTeamAndKill: { type: Number },
    landSkillShotsEarlyGame: { type: Number },
    laneMinionsFirst10Minutes: { type: Number },
    laningPhaseGoldExpAdvantage: { type: Number },
    legendaryCount: { type: Number },
    legendaryItemUsed: { type: [Number] },
    lostAnInhibitor: { type: Number },
    maxCsAdvantageOnLaneOpponent: { type: Number },
    maxKillDeficit: { type: Number },
    maxLevelLeadLaneOpponent: { type: Number },
    mejaisFullStackInTime: { type: Number },
    moreEnemyJungleThanOpponent: { type: Number },
    multiKillOneSpell: { type: Number },
    multiTurretRiftHeraldCount: { type: Number },
    multikills: { type: Number },
    multikillsAfterAggressiveFlash: { type: Number },
    outerTurretExecutesBefore10Minutes: { type: Number },
    outnumberedKills: { type: Number },
    outnumberedNexusKill: { type: Number },
    perfectDragonSoulsTaken: { type: Number },
    perfectGame: { type: Number },
    pickKillWithAlly: { type: Number },
    playedChampSelectPosition: { type: Number },
    poroExplosions: { type: Number },
    quickCleanse: { type: Number },
    quickFirstTurret: { type: Number },
    quickSoloKills: { type: Number },
    riftHeraldTakedowns: { type: Number },
    saveAllyFromDeath: { type: Number },
    scuttleCrabKills: { type: Number },
    skillshotsDodged: { type: Number },
    skillshotsHit: { type: Number },
    snowballsHit: { type: Number },
    soloBaronKills: { type: Number },
    soloKills: { type: Number },
    soloTurretsLategame: { type: Number },
    stealthWardsPlaced: { type: Number },
    survivedSingleDigitHpCount: { type: Number },
    survivedThreeImmobilizesInFight: { type: Number },
    takedownOnFirstTurret: { type: Number },
    takedowns: { type: Number },
    takedownsAfterGainingLevelAdvantage: { type: Number },
    takedownsBeforeJungleMinionSpawn: { type: Number },
    takedownsFirstXMinutes: { type: Number },
    takedownsInAlcove: { type: Number },
    takedownsInEnemyFountain: { type: Number },
    teamBaronKills: { type: Number },
    teamDamagePercentage: { type: Number },
    teamElderDragonKills: { type: Number },
    teamRiftHeraldKills: { type: Number },
    tookLargeDamageSurvived: { type: Number },
    turretPlatesTaken: { type: Number },
    turretTakedowns: { type: Number },
    turretsTakenWithRiftHerald: { type: Number },
    twentyMinionsIn3SecondsCount: { type: Number },
    twoWardsOneSweeperCount: { type: Number },
    unseenRecalls: { type: Number },
    visionScoreAdvantageLaneOpponent: { type: Number },
    visionScorePerMinute: { type: Number },
    voidMonsterKill: { type: Number },
    wardTakedowns: { type: Number },
    wardTakedownsBefore20M: { type: Number },
    wardsGuarded: { type: Number },
    junglerKillsEarlyJungle: { type: Number },
    killsOnLanersEarlyJungleAsJungler: { type: Number },
    shortestTimeToAceFromFirstTakedown: { type: Number },
    highestWardKills: { type: Number },
    highestChampionDamage: { type: Number },
    fasterSupportQuestCompletion: { type: Number },
    highestCrowdControlScore: { type: Number },
});

const MissionsSchema = new Schema<Missions>({
    playerScore0: { type: Number, required: true },
    playerScore1: { type: Number, required: true },
    playerScore2: { type: Number, required: true },
    playerScore3: { type: Number, required: true },
    playerScore4: { type: Number, required: true },
    playerScore5: { type: Number, required: true },
    playerScore6: { type: Number, required: true },
    playerScore7: { type: Number, required: true },
    playerScore8: { type: Number, required: true },
    playerScore9: { type: Number, required: true },
    playerScore10: { type: Number, required: true },
    playerScore11: { type: Number, required: true },
});

const PerksSchema = new Schema<Perks>({
    statPerks: {
        defense: { type: Number, required: true },
        flex: { type: Number, required: true },
        offense: { type: Number, required: true },
    },
    styles: [
        {
            description: { type: String, required: true },
            selections: [
                {
                    perk: { type: Number, required: true },
                    var1: { type: Number, required: true },
                    var2: { type: Number, required: true },
                    var3: { type: Number, required: true },
                },
            ],
            style: { type: Number, required: true },
        },
    ],
});

const ParticipantSchema = new Schema<Participant>({
    allInPings: { type: Number, required: true },
    assistMePings: { type: Number, required: true },
    assists: { type: Number, required: true },
    baronKills: { type: Number, required: true },
    basicPings: { type: Number, required: true },
    bountyLevel: { type: Number, required: true },
    challenges: { type: ChallengesSchema, required: true },
    champExperience: { type: Number, required: true },
    champLevel: { type: Number, required: true },
    championId: { type: Number, required: true },
    championName: { type: String, required: true },
    championTransform: { type: Number, required: true },
    commandPings: { type: Number, required: true },
    consumablesPurchased: { type: Number, required: true },
    damageDealtToBuildings: { type: Number, required: true },
    damageDealtToObjectives: { type: Number, required: true },
    damageDealtToTurrets: { type: Number, required: true },
    damageSelfMitigated: { type: Number, required: true },
    dangerPings: { type: Number, required: true },
    deaths: { type: Number, required: true },
    detectorWardsPlaced: { type: Number, required: true },
    doubleKills: { type: Number, required: true },
    dragonKills: { type: Number, required: true },
    eligibleForProgression: { type: Boolean, required: true },
    enemyMissingPings: { type: Number, required: true },
    enemyVisionPings: { type: Number, required: true },
    firstBloodAssist: { type: Boolean, required: true },
    firstBloodKill: { type: Boolean, required: true },
    firstTowerAssist: { type: Boolean, required: true },
    firstTowerKill: { type: Boolean, required: true },
    gameEndedInEarlySurrender: { type: Boolean, required: true },
    gameEndedInSurrender: { type: Boolean, required: true },
    getBackPings: { type: Number, required: true },
    goldEarned: { type: Number, required: true },
    goldSpent: { type: Number, required: true },
    holdPings: { type: Number, required: true },
    individualPosition: { type: String, required: true },
    inhibitorKills: { type: Number, required: true },
    inhibitorTakedowns: { type: Number, required: true },
    inhibitorsLost: { type: Number, required: true },
    item0: { type: Number, required: true },
    item1: { type: Number, required: true },
    item2: { type: Number, required: true },
    item3: { type: Number, required: true },
    item4: { type: Number, required: true },
    item5: { type: Number, required: true },
    item6: { type: Number, required: true },
    itemsPurchased: { type: Number, required: true },
    killingSprees: { type: Number, required: true },
    kills: { type: Number, required: true },
    lane: { type: String, required: true },
    largestCriticalStrike: { type: Number, required: true },
    largestKillingSpree: { type: Number, required: true },
    largestMultiKill: { type: Number, required: true },
    longestTimeSpentLiving: { type: Number, required: true },
    magicDamageDealt: { type: Number, required: true },
    magicDamageDealtToChampions: { type: Number, required: true },
    magicDamageTaken: { type: Number, required: true },
    missions: { type: MissionsSchema, required: true },
    needVisionPings: { type: Number, required: true },
    neutralMinionsKilled: { type: Number, required: true },
    nexusKills: { type: Number, required: true },
    nexusLost: { type: Number, required: true },
    nexusTakedowns: { type: Number, required: true },
    objectivesStolen: { type: Number, required: true },
    objectivesStolenAssists: { type: Number, required: true },
    onMyWayPings: { type: Number, required: true },
    participantId: { type: Number, required: true },
    pentaKills: { type: Number, required: true },
    perks: { type: PerksSchema, required: true },
    physicalDamageDealt: { type: Number, required: true },
    physicalDamageDealtToChampions: { type: Number, required: true },
    physicalDamageTaken: { type: Number, required: true },
    placement: { type: Number, required: true },
    playerAugment1: { type: Number, required: true },
    playerAugment2: { type: Number, required: true },
    playerAugment3: { type: Number, required: true },
    playerAugment4: { type: Number, required: true },
    playerAugment5: { type: Number, required: true },
    playerAugment6: { type: Number, required: true },
    playerSubteamId: { type: Number, required: true },
    profileIcon: { type: Number, required: true },
    pushPings: { type: Number, required: true },
    puuid: { type: String, required: true },
    quadraKills: { type: Number, required: true },
    retreatPings: { type: Number, required: true },
    riotIdGameName: { type: String, required: true },
    riotIdTagline: { type: String, required: true },
    role: { type: String, required: true },
    sightWardsBoughtInGame: { type: Number, required: true },
    spell1Casts: { type: Number, required: true },
    spell2Casts: { type: Number, required: true },
    spell3Casts: { type: Number, required: true },
    spell4Casts: { type: Number, required: true },
    subteamPlacement: { type: Number, required: true },
    summoner1Casts: { type: Number, required: true },
    summoner1Id: { type: Number, required: true },
    summoner2Casts: { type: Number, required: true },
    summoner2Id: { type: Number, required: true },
    summonerId: { type: String, required: true },
    summonerLevel: { type: Number, required: true },
    summonerName: { type: String, required: true },
    teamEarlySurrendered: { type: Boolean, required: true },
    teamId: { type: Number, required: true },
    teamPosition: { type: String, required: true },
    timeCCingOthers: { type: Number, required: true },
    timePlayed: { type: Number, required: true },
    totalAllyJungleMinionsKilled: { type: Number, required: true },
    totalDamageDealt: { type: Number, required: true },
    totalDamageDealtToChampions: { type: Number, required: true },
    totalDamageShieldedOnTeammates: { type: Number, required: true },
    totalDamageTaken: { type: Number, required: true },
    totalEnemyJungleMinionsKilled: { type: Number, required: true },
    totalHeal: { type: Number, required: true },
    totalHealsOnTeammates: { type: Number, required: true },
    totalMinionsKilled: { type: Number, required: true },
    totalTimeCCDealt: { type: Number, required: true },
    totalTimeSpentDead: { type: Number, required: true },
    totalUnitsHealed: { type: Number, required: true },
    tripleKills: { type: Number, required: true },
    trueDamageDealt: { type: Number, required: true },
    trueDamageDealtToChampions: { type: Number, required: true },
    trueDamageTaken: { type: Number, required: true },
    turretKills: { type: Number, required: true },
    turretTakedowns: { type: Number, required: true },
    turretsLost: { type: Number, required: true },
    unrealKills: { type: Number, required: true },
    visionClearedPings: { type: Number, required: true },
    visionScore: { type: Number, required: true },
    visionWardsBoughtInGame: { type: Number, required: true },
    wardsKilled: { type: Number, required: true },
    wardsPlaced: { type: Number, required: true },
    win: { type: Boolean, required: true },
});

const TeamSchema = new Schema<Team>({
    bans: [
        {
            championId: { type: Number, required: true },
            pickTurn: { type: Number, required: true },
        },
    ],
    objectives: {
        baron: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        champion: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        dragon: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        horde: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        inhibitor: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        riftHerald: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
        tower: {
            first: { type: Boolean, required: true },
            kills: { type: Number, required: true },
        },
    },
    teamId: { type: Number, required: true },
    win: { type: Boolean, required: true },
});

const MatchSchema = new Schema<Match>({
    info: {
        endOfGameResult: { type: String, required: true },
        gameCreation: { type: Number, required: true },
        gameDuration: { type: Number, required: true },
        gameEndTimestamp: { type: Number, required: true },
        gameId: { type: Number, required: true },
        gameMode: { type: String, required: true },
        gameStartTimestamp: { type: Number, required: true },
        gameType: { type: String, required: true },
        gameVersion: { type: String, required: true },
        mapId: { type: Number, required: true },
        participants: { type: [ParticipantSchema], required: true },
        platformId: { type: String, required: true },
        queueId: { type: Number, required: true },
        teams: { type: [TeamSchema], required: true },
        tournamentCode: { type: String, required: true },
    },
    metadata: {
        dataVersion: { type: String, required: true },
        matchId: { type: String, required: true },
        participants: { type: [String], required: true },
    },
});

export const MatchModel = models.Match || model<Match>('Match', MatchSchema);
